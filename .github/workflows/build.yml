apt install acpica-tools chrpath doxygen g++-multilib libasound2-dev libcap-dev \
        libcurl4-openssl-dev libdevmapper-dev libidl-dev libopus-dev libpam0g-dev \
        libpulse-dev libqt5opengl5-dev libqt5x11extras5-dev qttools5-dev libsdl1.2-dev libsdl-ttf2.0-dev \
        libssl-dev libvpx-dev libxcursor-dev libxinerama-dev libxml2-dev libxml2-utils \
        libxmu-dev libxrandr-dev make nasm python3-dev python2-dev qttools5-dev-tools \
        texlive texlive-fonts-extra texlive-latex-extra unzip xsltproc \
        \
        default-jdk libstdc++5 libxslt1-dev linux-kernel-headers makeself \
        mesa-common-dev subversion yasm zlib1g-dev glslang-tools \
        libc6-dev-i386 lib32stdc++6 libtpms-dev
Newer GCC versions (>= 12) might cause build issues. The command above installs a compatible version on Ubuntu 22.04.

After having all the prerequisites installed, the build process can be condensed to the following steps:

$ ./configure --with-kvm --disable-kmods --disable-docs --disable-hardening --disable-java
$ source ./env.sh
$ kmk
$ out/linux.amd64/release/bin/VirtualBox

name: "Dev Builds"

on: 
  push:
    branches:
      - 'dev'
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: |
        apt-get update -y
        apt-get install -y acpica-tools chrpath doxygen g++-multilib libasound2-dev libcap-dev \
          libcurl4-openssl-dev libdevmapper-dev libidl-dev libopus-dev libpam0g-dev \
          libpulse-dev libqt5opengl5-dev libqt5x11extras5-dev qttools5-dev libsdl1.2-dev libsdl-ttf2.0-dev \
          libssl-dev libvpx-dev libxcursor-dev libxinerama-dev libxml2-dev libxml2-utils \
          libxmu-dev libxrandr-dev make nasm python3-dev python2-dev qttools5-dev-tools \
          texlive texlive-fonts-extra texlive-latex-extra unzip xsltproc \
          default-jdk libstdc++5 libxslt1-dev linux-kernel-headers makeself \
          mesa-common-dev subversion yasm zlib1g-dev glslang-tools \
          libc6-dev-i386 lib32stdc++6 libtpms-dev
    - name: Build
      run: |
        ./configure --with-kvm --disable-kmods --disable-docs --disable-hardening --disable-java
        source ./env.sh
        kmk
    - name: Archive
      run: |
        tar czvf dev-build.tar.gz out/
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "dev-build.tar.gz"
        allowUpdates: true
        replacesArtifacts: true
        body: 'Build for commit ${{ github.sha }}'
        tag: dev-build
        prerelease: true
